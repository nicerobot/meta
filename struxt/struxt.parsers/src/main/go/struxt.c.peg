Struxt     <- Node                           { printf("Struxt\n"); }
Node       <- Tag Children                   { printf("Node\n"); }
            / Str                            { printf("String\n"); }
Nodes      <- ( Node Nodes? )?               { printf("Nodes\n"); }
Etag       <- Tag?                           { printf("ETag\n"); }
Tag        <- Id Attributes?                 { printf("Tag\n"); }
Children   <- '{' Nodes Etag '}'
            / '(' Nodes Etag ')'
            / '[' Nodes Etag ']'
            / ':' SPACE Nodes SPACE '.'
Attribute  <- Id  Literal / Literal Id
Literal    <- Str / Number / Char
Attributes <- Attribute ( ',' Attributes )?
Id         <- [a-zA-Z_][-a-zA-Z0-9_]*
Str        <- '"' [^"]* '"'
Number     <- '-'? Int Frac? Exp?
Int        <- [0-9]+
Frac       <- '.' Int
Exp        <- [eE] [-+] [0-9]+
Char       <- '\'' . '\''

SPACE	     <- [ \t\n\r]*
